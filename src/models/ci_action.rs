/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CiAction {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "actionType", skip_serializing_if = "Option::is_none")]
    pub action_type: Option<models::CiActionType>,
    #[serde(rename = "destination", skip_serializing_if = "Option::is_none")]
    pub destination: Option<Destination>,
    #[serde(rename = "buildDistributionAudience", skip_serializing_if = "Option::is_none")]
    pub build_distribution_audience: Option<models::BuildAudienceType>,
    #[serde(rename = "testConfiguration", skip_serializing_if = "Option::is_none")]
    pub test_configuration: Option<Box<models::CiActionTestConfiguration>>,
    #[serde(rename = "scheme", skip_serializing_if = "Option::is_none")]
    pub scheme: Option<String>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<Platform>,
    #[serde(rename = "isRequiredToPass", skip_serializing_if = "Option::is_none")]
    pub is_required_to_pass: Option<bool>,
}

impl CiAction {
    pub fn new() -> CiAction {
        CiAction {
            name: None,
            action_type: None,
            destination: None,
            build_distribution_audience: None,
            test_configuration: None,
            scheme: None,
            platform: None,
            is_required_to_pass: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Destination {
    #[serde(rename = "ANY_IOS_DEVICE")]
    IosDevice,
    #[serde(rename = "ANY_IOS_SIMULATOR")]
    IosSimulator,
    #[serde(rename = "ANY_TVOS_DEVICE")]
    TvosDevice,
    #[serde(rename = "ANY_TVOS_SIMULATOR")]
    TvosSimulator,
    #[serde(rename = "ANY_WATCHOS_DEVICE")]
    WatchosDevice,
    #[serde(rename = "ANY_WATCHOS_SIMULATOR")]
    WatchosSimulator,
    #[serde(rename = "ANY_MAC")]
    Mac,
    #[serde(rename = "ANY_MAC_CATALYST")]
    MacCatalyst,
    #[serde(rename = "ANY_VISIONOS_DEVICE")]
    VisionosDevice,
    #[serde(rename = "ANY_VISIONOS_SIMULATOR")]
    VisionosSimulator,
}

impl Default for Destination {
    fn default() -> Destination {
        Self::IosDevice
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Platform {
    #[serde(rename = "MACOS")]
    Macos,
    #[serde(rename = "IOS")]
    Ios,
    #[serde(rename = "TVOS")]
    Tvos,
    #[serde(rename = "WATCHOS")]
    Watchos,
    #[serde(rename = "VISIONOS")]
    Visionos,
}

impl Default for Platform {
    fn default() -> Platform {
        Self::Macos
    }
}

