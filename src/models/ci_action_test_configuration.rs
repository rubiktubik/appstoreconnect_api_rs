/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CiActionTestConfiguration {
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<Kind>,
    #[serde(rename = "testPlanName", skip_serializing_if = "Option::is_none")]
    pub test_plan_name: Option<String>,
    #[serde(rename = "testDestinations", skip_serializing_if = "Option::is_none")]
    pub test_destinations: Option<Vec<models::CiTestDestination>>,
}

impl CiActionTestConfiguration {
    pub fn new() -> CiActionTestConfiguration {
        CiActionTestConfiguration {
            kind: None,
            test_plan_name: None,
            test_destinations: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "USE_SCHEME_SETTINGS")]
    UseSchemeSettings,
    #[serde(rename = "SPECIFIC_TEST_PLANS")]
    SpecificTestPlans,
}

impl Default for Kind {
    fn default() -> Kind {
        Self::UseSchemeSettings
    }
}

