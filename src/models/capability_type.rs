/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CapabilityType {
    #[serde(rename = "ICLOUD")]
    Icloud,
    #[serde(rename = "IN_APP_PURCHASE")]
    InAppPurchase,
    #[serde(rename = "GAME_CENTER")]
    GameCenter,
    #[serde(rename = "PUSH_NOTIFICATIONS")]
    PushNotifications,
    #[serde(rename = "WALLET")]
    Wallet,
    #[serde(rename = "INTER_APP_AUDIO")]
    InterAppAudio,
    #[serde(rename = "MAPS")]
    Maps,
    #[serde(rename = "ASSOCIATED_DOMAINS")]
    AssociatedDomains,
    #[serde(rename = "PERSONAL_VPN")]
    PersonalVpn,
    #[serde(rename = "APP_GROUPS")]
    AppGroups,
    #[serde(rename = "HEALTHKIT")]
    Healthkit,
    #[serde(rename = "HOMEKIT")]
    Homekit,
    #[serde(rename = "WIRELESS_ACCESSORY_CONFIGURATION")]
    WirelessAccessoryConfiguration,
    #[serde(rename = "APPLE_PAY")]
    ApplePay,
    #[serde(rename = "DATA_PROTECTION")]
    DataProtection,
    #[serde(rename = "SIRIKIT")]
    Sirikit,
    #[serde(rename = "NETWORK_EXTENSIONS")]
    NetworkExtensions,
    #[serde(rename = "MULTIPATH")]
    Multipath,
    #[serde(rename = "HOT_SPOT")]
    HotSpot,
    #[serde(rename = "NFC_TAG_READING")]
    NfcTagReading,
    #[serde(rename = "CLASSKIT")]
    Classkit,
    #[serde(rename = "AUTOFILL_CREDENTIAL_PROVIDER")]
    AutofillCredentialProvider,
    #[serde(rename = "ACCESS_WIFI_INFORMATION")]
    AccessWifiInformation,
    #[serde(rename = "NETWORK_CUSTOM_PROTOCOL")]
    NetworkCustomProtocol,
    #[serde(rename = "COREMEDIA_HLS_LOW_LATENCY")]
    CoremediaHlsLowLatency,
    #[serde(rename = "SYSTEM_EXTENSION_INSTALL")]
    SystemExtensionInstall,
    #[serde(rename = "USER_MANAGEMENT")]
    UserManagement,
    #[serde(rename = "APPLE_ID_AUTH")]
    AppleIdAuth,

}

impl std::fmt::Display for CapabilityType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Icloud => write!(f, "ICLOUD"),
            Self::InAppPurchase => write!(f, "IN_APP_PURCHASE"),
            Self::GameCenter => write!(f, "GAME_CENTER"),
            Self::PushNotifications => write!(f, "PUSH_NOTIFICATIONS"),
            Self::Wallet => write!(f, "WALLET"),
            Self::InterAppAudio => write!(f, "INTER_APP_AUDIO"),
            Self::Maps => write!(f, "MAPS"),
            Self::AssociatedDomains => write!(f, "ASSOCIATED_DOMAINS"),
            Self::PersonalVpn => write!(f, "PERSONAL_VPN"),
            Self::AppGroups => write!(f, "APP_GROUPS"),
            Self::Healthkit => write!(f, "HEALTHKIT"),
            Self::Homekit => write!(f, "HOMEKIT"),
            Self::WirelessAccessoryConfiguration => write!(f, "WIRELESS_ACCESSORY_CONFIGURATION"),
            Self::ApplePay => write!(f, "APPLE_PAY"),
            Self::DataProtection => write!(f, "DATA_PROTECTION"),
            Self::Sirikit => write!(f, "SIRIKIT"),
            Self::NetworkExtensions => write!(f, "NETWORK_EXTENSIONS"),
            Self::Multipath => write!(f, "MULTIPATH"),
            Self::HotSpot => write!(f, "HOT_SPOT"),
            Self::NfcTagReading => write!(f, "NFC_TAG_READING"),
            Self::Classkit => write!(f, "CLASSKIT"),
            Self::AutofillCredentialProvider => write!(f, "AUTOFILL_CREDENTIAL_PROVIDER"),
            Self::AccessWifiInformation => write!(f, "ACCESS_WIFI_INFORMATION"),
            Self::NetworkCustomProtocol => write!(f, "NETWORK_CUSTOM_PROTOCOL"),
            Self::CoremediaHlsLowLatency => write!(f, "COREMEDIA_HLS_LOW_LATENCY"),
            Self::SystemExtensionInstall => write!(f, "SYSTEM_EXTENSION_INSTALL"),
            Self::UserManagement => write!(f, "USER_MANAGEMENT"),
            Self::AppleIdAuth => write!(f, "APPLE_ID_AUTH"),
        }
    }
}

impl Default for CapabilityType {
    fn default() -> CapabilityType {
        Self::Icloud
    }
}

