/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GameCenterMatchmakingRuleCreateRequestDataAttributes {
    #[serde(rename = "referenceName")]
    pub reference_name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "expression")]
    pub expression: String,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<f64>,
}

impl GameCenterMatchmakingRuleCreateRequestDataAttributes {
    pub fn new(reference_name: String, description: String, r#type: Type, expression: String) -> GameCenterMatchmakingRuleCreateRequestDataAttributes {
        GameCenterMatchmakingRuleCreateRequestDataAttributes {
            reference_name,
            description,
            r#type,
            expression,
            weight: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "COMPATIBLE")]
    Compatible,
    #[serde(rename = "DISTANCE")]
    Distance,
    #[serde(rename = "MATCH")]
    Match,
    #[serde(rename = "TEAM")]
    Team,
}

impl Default for Type {
    fn default() -> Type {
        Self::Compatible
    }
}

