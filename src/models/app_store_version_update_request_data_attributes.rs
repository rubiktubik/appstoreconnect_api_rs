/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AppStoreVersionUpdateRequestDataAttributes {
    #[serde(rename = "versionString", skip_serializing_if = "Option::is_none")]
    pub version_string: Option<String>,
    #[serde(rename = "copyright", skip_serializing_if = "Option::is_none")]
    pub copyright: Option<String>,
    #[serde(rename = "reviewType", skip_serializing_if = "Option::is_none")]
    pub review_type: Option<ReviewType>,
    #[serde(rename = "releaseType", skip_serializing_if = "Option::is_none")]
    pub release_type: Option<ReleaseType>,
    #[serde(rename = "earliestReleaseDate", skip_serializing_if = "Option::is_none")]
    pub earliest_release_date: Option<String>,
    #[serde(rename = "downloadable", skip_serializing_if = "Option::is_none")]
    pub downloadable: Option<bool>,
}

impl AppStoreVersionUpdateRequestDataAttributes {
    pub fn new() -> AppStoreVersionUpdateRequestDataAttributes {
        AppStoreVersionUpdateRequestDataAttributes {
            version_string: None,
            copyright: None,
            review_type: None,
            release_type: None,
            earliest_release_date: None,
            downloadable: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReviewType {
    #[serde(rename = "APP_STORE")]
    AppStore,
    #[serde(rename = "NOTARIZATION")]
    Notarization,
}

impl Default for ReviewType {
    fn default() -> ReviewType {
        Self::AppStore
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReleaseType {
    #[serde(rename = "MANUAL")]
    Manual,
    #[serde(rename = "AFTER_APPROVAL")]
    AfterApproval,
    #[serde(rename = "SCHEDULED")]
    Scheduled,
}

impl Default for ReleaseType {
    fn default() -> ReleaseType {
        Self::Manual
    }
}

