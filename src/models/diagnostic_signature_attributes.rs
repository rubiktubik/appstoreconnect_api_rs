/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DiagnosticSignatureAttributes {
    #[serde(rename = "diagnosticType", skip_serializing_if = "Option::is_none")]
    pub diagnostic_type: Option<DiagnosticType>,
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<String>,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<f64>,
    #[serde(rename = "insight", skip_serializing_if = "Option::is_none")]
    pub insight: Option<Box<models::DiagnosticInsight>>,
}

impl DiagnosticSignatureAttributes {
    pub fn new() -> DiagnosticSignatureAttributes {
        DiagnosticSignatureAttributes {
            diagnostic_type: None,
            signature: None,
            weight: None,
            insight: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DiagnosticType {
    #[serde(rename = "DISK_WRITES")]
    DiskWrites,
    #[serde(rename = "HANGS")]
    Hangs,
    #[serde(rename = "LAUNCHES")]
    Launches,
}

impl Default for DiagnosticType {
    fn default() -> DiagnosticType {
        Self::DiskWrites
    }
}

