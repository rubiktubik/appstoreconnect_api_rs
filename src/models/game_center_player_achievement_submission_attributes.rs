/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GameCenterPlayerAchievementSubmissionAttributes {
    #[serde(rename = "bundleId", skip_serializing_if = "Option::is_none")]
    pub bundle_id: Option<String>,
    #[serde(rename = "challengeIds", skip_serializing_if = "Option::is_none")]
    pub challenge_ids: Option<Vec<String>>,
    #[serde(rename = "percentageAchieved", skip_serializing_if = "Option::is_none")]
    pub percentage_achieved: Option<i32>,
    #[serde(rename = "scopedPlayerId", skip_serializing_if = "Option::is_none")]
    pub scoped_player_id: Option<String>,
    #[serde(rename = "submittedDate", skip_serializing_if = "Option::is_none")]
    pub submitted_date: Option<String>,
    #[serde(rename = "vendorIdentifier", skip_serializing_if = "Option::is_none")]
    pub vendor_identifier: Option<String>,
}

impl GameCenterPlayerAchievementSubmissionAttributes {
    pub fn new() -> GameCenterPlayerAchievementSubmissionAttributes {
        GameCenterPlayerAchievementSubmissionAttributes {
            bundle_id: None,
            challenge_ids: None,
            percentage_achieved: None,
            scoped_player_id: None,
            submitted_date: None,
            vendor_identifier: None,
        }
    }
}

