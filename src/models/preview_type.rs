/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PreviewType {
    #[serde(rename = "IPHONE_67")]
    Iphone67,
    #[serde(rename = "IPHONE_61")]
    Iphone61,
    #[serde(rename = "IPHONE_65")]
    Iphone65,
    #[serde(rename = "IPHONE_58")]
    Iphone58,
    #[serde(rename = "IPHONE_55")]
    Iphone55,
    #[serde(rename = "IPHONE_47")]
    Iphone47,
    #[serde(rename = "IPHONE_40")]
    Iphone40,
    #[serde(rename = "IPHONE_35")]
    Iphone35,
    #[serde(rename = "IPAD_PRO_3GEN_129")]
    IpadPro3Gen129,
    #[serde(rename = "IPAD_PRO_3GEN_11")]
    IpadPro3Gen11,
    #[serde(rename = "IPAD_PRO_129")]
    IpadPro129,
    #[serde(rename = "IPAD_105")]
    Ipad105,
    #[serde(rename = "IPAD_97")]
    Ipad97,
    #[serde(rename = "DESKTOP")]
    Desktop,
    #[serde(rename = "APPLE_TV")]
    AppleTv,
    #[serde(rename = "APPLE_VISION_PRO")]
    AppleVisionPro,

}

impl std::fmt::Display for PreviewType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Iphone67 => write!(f, "IPHONE_67"),
            Self::Iphone61 => write!(f, "IPHONE_61"),
            Self::Iphone65 => write!(f, "IPHONE_65"),
            Self::Iphone58 => write!(f, "IPHONE_58"),
            Self::Iphone55 => write!(f, "IPHONE_55"),
            Self::Iphone47 => write!(f, "IPHONE_47"),
            Self::Iphone40 => write!(f, "IPHONE_40"),
            Self::Iphone35 => write!(f, "IPHONE_35"),
            Self::IpadPro3Gen129 => write!(f, "IPAD_PRO_3GEN_129"),
            Self::IpadPro3Gen11 => write!(f, "IPAD_PRO_3GEN_11"),
            Self::IpadPro129 => write!(f, "IPAD_PRO_129"),
            Self::Ipad105 => write!(f, "IPAD_105"),
            Self::Ipad97 => write!(f, "IPAD_97"),
            Self::Desktop => write!(f, "DESKTOP"),
            Self::AppleTv => write!(f, "APPLE_TV"),
            Self::AppleVisionPro => write!(f, "APPLE_VISION_PRO"),
        }
    }
}

impl Default for PreviewType {
    fn default() -> PreviewType {
        Self::Iphone67
    }
}

