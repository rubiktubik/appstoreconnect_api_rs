/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UserRole {
    #[serde(rename = "ADMIN")]
    Admin,
    #[serde(rename = "FINANCE")]
    Finance,
    #[serde(rename = "ACCOUNT_HOLDER")]
    AccountHolder,
    #[serde(rename = "SALES")]
    Sales,
    #[serde(rename = "MARKETING")]
    Marketing,
    #[serde(rename = "APP_MANAGER")]
    AppManager,
    #[serde(rename = "DEVELOPER")]
    Developer,
    #[serde(rename = "ACCESS_TO_REPORTS")]
    AccessToReports,
    #[serde(rename = "CUSTOMER_SUPPORT")]
    CustomerSupport,
    #[serde(rename = "CREATE_APPS")]
    CreateApps,
    #[serde(rename = "CLOUD_MANAGED_DEVELOPER_ID")]
    CloudManagedDeveloperId,
    #[serde(rename = "CLOUD_MANAGED_APP_DISTRIBUTION")]
    CloudManagedAppDistribution,
    #[serde(rename = "GENERATE_INDIVIDUAL_KEYS")]
    GenerateIndividualKeys,

}

impl std::fmt::Display for UserRole {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Admin => write!(f, "ADMIN"),
            Self::Finance => write!(f, "FINANCE"),
            Self::AccountHolder => write!(f, "ACCOUNT_HOLDER"),
            Self::Sales => write!(f, "SALES"),
            Self::Marketing => write!(f, "MARKETING"),
            Self::AppManager => write!(f, "APP_MANAGER"),
            Self::Developer => write!(f, "DEVELOPER"),
            Self::AccessToReports => write!(f, "ACCESS_TO_REPORTS"),
            Self::CustomerSupport => write!(f, "CUSTOMER_SUPPORT"),
            Self::CreateApps => write!(f, "CREATE_APPS"),
            Self::CloudManagedDeveloperId => write!(f, "CLOUD_MANAGED_DEVELOPER_ID"),
            Self::CloudManagedAppDistribution => write!(f, "CLOUD_MANAGED_APP_DISTRIBUTION"),
            Self::GenerateIndividualKeys => write!(f, "GENERATE_INDIVIDUAL_KEYS"),
        }
    }
}

impl Default for UserRole {
    fn default() -> UserRole {
        Self::Admin
    }
}

