/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CiIssueAttributes {
    #[serde(rename = "issueType", skip_serializing_if = "Option::is_none")]
    pub issue_type: Option<IssueType>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "fileSource", skip_serializing_if = "Option::is_none")]
    pub file_source: Option<Box<models::FileLocation>>,
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
}

impl CiIssueAttributes {
    pub fn new() -> CiIssueAttributes {
        CiIssueAttributes {
            issue_type: None,
            message: None,
            file_source: None,
            category: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IssueType {
    #[serde(rename = "ANALYZER_WARNING")]
    AnalyzerWarning,
    #[serde(rename = "ERROR")]
    Error,
    #[serde(rename = "TEST_FAILURE")]
    TestFailure,
    #[serde(rename = "WARNING")]
    Warning,
}

impl Default for IssueType {
    fn default() -> IssueType {
        Self::AnalyzerWarning
    }
}

