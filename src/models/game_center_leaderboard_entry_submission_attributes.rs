/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use super::decimal::Decimal;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GameCenterLeaderboardEntrySubmissionAttributes {
    #[serde(rename = "bundleId", skip_serializing_if = "Option::is_none")]
    pub bundle_id: Option<String>,
    #[serde(rename = "challengeIds", skip_serializing_if = "Option::is_none")]
    pub challenge_ids: Option<Vec<String>>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<Decimal>,
    #[serde(rename = "scopedPlayerId", skip_serializing_if = "Option::is_none")]
    pub scoped_player_id: Option<String>,
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<Decimal>,
    #[serde(rename = "submittedDate", skip_serializing_if = "Option::is_none")]
    pub submitted_date: Option<String>,
    #[serde(rename = "vendorIdentifier", skip_serializing_if = "Option::is_none")]
    pub vendor_identifier: Option<String>,
}

impl GameCenterLeaderboardEntrySubmissionAttributes {
    pub fn new() -> GameCenterLeaderboardEntrySubmissionAttributes {
        GameCenterLeaderboardEntrySubmissionAttributes {
            bundle_id: None,
            challenge_ids: None,
            context: None,
            scoped_player_id: None,
            score: None,
            submitted_date: None,
            vendor_identifier: None,
        }
    }
}
