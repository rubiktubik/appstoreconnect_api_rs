/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CapabilitySetting {
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<Key>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "enabledByDefault", skip_serializing_if = "Option::is_none")]
    pub enabled_by_default: Option<bool>,
    #[serde(rename = "visible", skip_serializing_if = "Option::is_none")]
    pub visible: Option<bool>,
    #[serde(rename = "allowedInstances", skip_serializing_if = "Option::is_none")]
    pub allowed_instances: Option<AllowedInstances>,
    #[serde(rename = "minInstances", skip_serializing_if = "Option::is_none")]
    pub min_instances: Option<i32>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Vec<models::CapabilityOption>>,
}

impl CapabilitySetting {
    pub fn new() -> CapabilitySetting {
        CapabilitySetting {
            key: None,
            name: None,
            description: None,
            enabled_by_default: None,
            visible: None,
            allowed_instances: None,
            min_instances: None,
            options: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Key {
    #[serde(rename = "ICLOUD_VERSION")]
    IcloudVersion,
    #[serde(rename = "DATA_PROTECTION_PERMISSION_LEVEL")]
    DataProtectionPermissionLevel,
    #[serde(rename = "APPLE_ID_AUTH_APP_CONSENT")]
    AppleIdAuthAppConsent,
}

impl Default for Key {
    fn default() -> Key {
        Self::IcloudVersion
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AllowedInstances {
    #[serde(rename = "ENTRY")]
    Entry,
    #[serde(rename = "SINGLE")]
    Single,
    #[serde(rename = "MULTIPLE")]
    Multiple,
}

impl Default for AllowedInstances {
    fn default() -> AllowedInstances {
        Self::Entry
    }
}

