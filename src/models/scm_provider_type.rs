/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScmProviderType {
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<Kind>,
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "isOnPremise", skip_serializing_if = "Option::is_none")]
    pub is_on_premise: Option<bool>,
}

impl ScmProviderType {
    pub fn new() -> ScmProviderType {
        ScmProviderType {
            kind: None,
            display_name: None,
            is_on_premise: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kind {
    #[serde(rename = "BITBUCKET_CLOUD")]
    BitbucketCloud,
    #[serde(rename = "BITBUCKET_SERVER")]
    BitbucketServer,
    #[serde(rename = "GITHUB_CLOUD")]
    GithubCloud,
    #[serde(rename = "GITHUB_ENTERPRISE")]
    GithubEnterprise,
    #[serde(rename = "GITLAB_CLOUD")]
    GitlabCloud,
    #[serde(rename = "GITLAB_SELF_MANAGED")]
    GitlabSelfManaged,
}

impl Default for Kind {
    fn default() -> Kind {
        Self::BitbucketCloud
    }
}

