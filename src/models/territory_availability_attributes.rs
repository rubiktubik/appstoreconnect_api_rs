/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TerritoryAvailabilityAttributes {
    #[serde(rename = "available", skip_serializing_if = "Option::is_none")]
    pub available: Option<bool>,
    #[serde(rename = "releaseDate", skip_serializing_if = "Option::is_none")]
    pub release_date: Option<String>,
    #[serde(rename = "preOrderEnabled", skip_serializing_if = "Option::is_none")]
    pub pre_order_enabled: Option<bool>,
    #[serde(rename = "preOrderPublishDate", skip_serializing_if = "Option::is_none")]
    pub pre_order_publish_date: Option<String>,
    #[serde(rename = "contentStatuses", skip_serializing_if = "Option::is_none")]
    pub content_statuses: Option<Vec<ContentStatuses>>,
}

impl TerritoryAvailabilityAttributes {
    pub fn new() -> TerritoryAvailabilityAttributes {
        TerritoryAvailabilityAttributes {
            available: None,
            release_date: None,
            pre_order_enabled: None,
            pre_order_publish_date: None,
            content_statuses: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentStatuses {
    #[serde(rename = "AVAILABLE")]
    Available,
    #[serde(rename = "AVAILABLE_FOR_PREORDER_ON_DATE")]
    AvailableForPreorderOnDate,
    #[serde(rename = "PROCESSING_TO_NOT_AVAILABLE")]
    ProcessingToNotAvailable,
    #[serde(rename = "PROCESSING_TO_AVAILABLE")]
    ProcessingToAvailable,
    #[serde(rename = "PROCESSING_TO_PRE_ORDER")]
    ProcessingToPreOrder,
    #[serde(rename = "AVAILABLE_FOR_SALE_UNRELEASED_APP")]
    AvailableForSaleUnreleasedApp,
    #[serde(rename = "PREORDER_ON_UNRELEASED_APP")]
    PreorderOnUnreleasedApp,
    #[serde(rename = "AVAILABLE_FOR_PREORDER")]
    AvailableForPreorder,
    #[serde(rename = "MISSING_RATING")]
    MissingRating,
    #[serde(rename = "CANNOT_SELL_RESTRICTED_RATING")]
    CannotSellRestrictedRating,
    #[serde(rename = "BRAZIL_REQUIRED_TAX_ID")]
    BrazilRequiredTaxId,
    #[serde(rename = "MISSING_GRN")]
    MissingGrn,
    #[serde(rename = "UNVERIFIED_GRN")]
    UnverifiedGrn,
    #[serde(rename = "ICP_NUMBER_INVALID")]
    IcpNumberInvalid,
    #[serde(rename = "ICP_NUMBER_MISSING")]
    IcpNumberMissing,
    #[serde(rename = "CANNOT_SELL_SEVENTEEN_PLUS_APPS")]
    CannotSellSeventeenPlusApps,
    #[serde(rename = "CANNOT_SELL_SEXUALLY_EXPLICIT")]
    CannotSellSexuallyExplicit,
    #[serde(rename = "CANNOT_SELL_NON_IOS_GAMES")]
    CannotSellNonIosGames,
    #[serde(rename = "CANNOT_SELL_SEVENTEEN_PLUS_GAMES")]
    CannotSellSeventeenPlusGames,
    #[serde(rename = "CANNOT_SELL_FREQUENT_INTENSE_GAMBLING")]
    CannotSellFrequentIntenseGambling,
    #[serde(rename = "CANNOT_SELL_CASINO")]
    CannotSellCasino,
    #[serde(rename = "CANNOT_SELL_CASINO_WITHOUT_GRAC")]
    CannotSellCasinoWithoutGrac,
    #[serde(rename = "CANNOT_SELL_CASINO_WITHOUT_AGE_VERIFICATION")]
    CannotSellCasinoWithoutAgeVerification,
    #[serde(rename = "CANNOT_SELL_FREQUENT_INTENSE_ALCOHOL_TOBACCO_DRUGS")]
    CannotSellFrequentIntenseAlcoholTobaccoDrugs,
    #[serde(rename = "CANNOT_SELL_FREQUENT_INTENSE_VIOLENCE")]
    CannotSellFrequentIntenseViolence,
    #[serde(rename = "CANNOT_SELL_FREQUENT_INTENSE_SEXUAL_CONTENT_NUDITY")]
    CannotSellFrequentIntenseSexualContentNudity,
    #[serde(rename = "CANNOT_SELL_INFREQUENT_MILD_ALCOHOL_TOBACCO_DRUGS")]
    CannotSellInfrequentMildAlcoholTobaccoDrugs,
    #[serde(rename = "CANNOT_SELL_INFREQUENT_MILD_SEXUAL_CONTENT_NUDITY")]
    CannotSellInfrequentMildSexualContentNudity,
    #[serde(rename = "CANNOT_SELL_ADULT_ONLY")]
    CannotSellAdultOnly,
    #[serde(rename = "CANNOT_SELL_FREQUENT_INTENSE")]
    CannotSellFrequentIntense,
    #[serde(rename = "CANNOT_SELL_FREQUENT_INTENSE_WITHOUT_GRAC")]
    CannotSellFrequentIntenseWithoutGrac,
    #[serde(rename = "CANNOT_SELL_GAMBLING_CONTESTS")]
    CannotSellGamblingContests,
    #[serde(rename = "CANNOT_SELL_GAMBLING")]
    CannotSellGambling,
    #[serde(rename = "CANNOT_SELL_CONTESTS")]
    CannotSellContests,
    #[serde(rename = "CANNOT_SELL")]
    CannotSell,
}

impl Default for ContentStatuses {
    fn default() -> ContentStatuses {
        Self::Available
    }
}

