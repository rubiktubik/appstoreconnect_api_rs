/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CiFilesAndFoldersRule {
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<Mode>,
    #[serde(rename = "matchers", skip_serializing_if = "Option::is_none")]
    pub matchers: Option<Vec<models::CiStartConditionFileMatcher>>,
}

impl CiFilesAndFoldersRule {
    pub fn new() -> CiFilesAndFoldersRule {
        CiFilesAndFoldersRule {
            mode: None,
            matchers: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Mode {
    #[serde(rename = "START_IF_ANY_FILE_MATCHES")]
    StartIfAnyFileMatches,
    #[serde(rename = "DO_NOT_START_IF_ALL_FILES_MATCH")]
    DoNotStartIfAllFilesMatch,
}

impl Default for Mode {
    fn default() -> Mode {
        Self::StartIfAnyFileMatches
    }
}

