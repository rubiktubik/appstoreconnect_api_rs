/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AppEncryptionDeclarationAttributes {
    #[serde(rename = "appDescription", skip_serializing_if = "Option::is_none")]
    pub app_description: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<String>,
    #[serde(rename = "usesEncryption", skip_serializing_if = "Option::is_none")]
    pub uses_encryption: Option<bool>,
    #[serde(rename = "exempt", skip_serializing_if = "Option::is_none")]
    pub exempt: Option<bool>,
    #[serde(rename = "containsProprietaryCryptography", skip_serializing_if = "Option::is_none")]
    pub contains_proprietary_cryptography: Option<bool>,
    #[serde(rename = "containsThirdPartyCryptography", skip_serializing_if = "Option::is_none")]
    pub contains_third_party_cryptography: Option<bool>,
    #[serde(rename = "availableOnFrenchStore", skip_serializing_if = "Option::is_none")]
    pub available_on_french_store: Option<bool>,
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<models::Platform>,
    #[serde(rename = "uploadedDate", skip_serializing_if = "Option::is_none")]
    pub uploaded_date: Option<String>,
    #[serde(rename = "documentUrl", skip_serializing_if = "Option::is_none")]
    pub document_url: Option<String>,
    #[serde(rename = "documentName", skip_serializing_if = "Option::is_none")]
    pub document_name: Option<String>,
    #[serde(rename = "documentType", skip_serializing_if = "Option::is_none")]
    pub document_type: Option<String>,
    #[serde(rename = "appEncryptionDeclarationState", skip_serializing_if = "Option::is_none")]
    pub app_encryption_declaration_state: Option<models::AppEncryptionDeclarationState>,
    #[serde(rename = "codeValue", skip_serializing_if = "Option::is_none")]
    pub code_value: Option<String>,
}

impl AppEncryptionDeclarationAttributes {
    pub fn new() -> AppEncryptionDeclarationAttributes {
        AppEncryptionDeclarationAttributes {
            app_description: None,
            created_date: None,
            uses_encryption: None,
            exempt: None,
            contains_proprietary_cryptography: None,
            contains_third_party_cryptography: None,
            available_on_french_store: None,
            platform: None,
            uploaded_date: None,
            document_url: None,
            document_name: None,
            document_type: None,
            app_encryption_declaration_state: None,
            code_value: None,
        }
    }
}

